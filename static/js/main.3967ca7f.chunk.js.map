{"version":3,"sources":["Overview.js","Product.js","router.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["Overview","className","Object","entries","data","itemsById","sort","map","key","name","image","stores","storesWithStock","a","b","price","filter","i","stock","isInStock","length","item","href","target","rel","src","alt","title","height","Product","props","id","route","params","BackToOverview","sortedByPriceAndStock","store","url","Routes","path","component","App","role","aria-hidden","Boolean","window","location","hostname","match","rootElement","document","getElementById","hasChildNodes","hydrate","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3967ca7f.chunk.js","sourcesContent":["import React from \"react\";\nimport data from \"./data.json\";\n\nexport const Overview = () => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th className=\"column-image\"></th>\n          <th className=\"column-name\">Product</th>\n          <th className=\"column-stock\">Stock</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(data.itemsById)\n          .sort(([keyA], [keyB]) => (keyA > keyB ? 1 : -1))\n          .map(([key, { name, image, stores = [] }]) => {\n            const storesWithStock = stores\n              .sort((a, b) => (a.price || 0) - (b.price || 0))\n              .filter((i) => i.stock);\n            const isInStock = storesWithStock.length > 0;\n            const item = storesWithStock[0];\n            return (\n              <tr key={key}>\n                <td className=\"column-image\">\n                  <a href={image} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={image} alt={name} title={name} height=\"30\" />\n                  </a>\n                </td>\n                <td className=\"column-name\">\n                  <a href={`#/product/${key}`}>{name}</a>\n                </td>\n                <td\n                  className={\n                    \"column-stock \" + (isInStock ? \"in-stock\" : \"out-of-stock\")\n                  }\n                >\n                  {!isInStock ? \"Out of stock\" : `${item.price || `???`} kr`}\n                </td>\n              </tr>\n            );\n          })}\n      </tbody>\n    </table>\n  );\n};\n","import React from \"react\";\nimport data from \"./data.json\";\n\nexport const Product = (props) => {\n  const {\n    route: {\n      params: { id },\n    },\n  } = props;\n\n  const { name, image, stores = [] } = data.itemsById[id] || {};\n\n  const BackToOverview = (\n    <a className=\"backToOverview\" href=\"#/\">\n      &laquo; Back to Overview\n    </a>\n  );\n\n  if (!stores.length || !name) {\n    return (\n      <>\n        {BackToOverview}\n        <p>Could not find product</p>\n      </>\n    );\n  }\n\n  const sortedByPriceAndStock = stores.sort((a, b) => {\n    if (a.stock && b.stock && a.price !== b.price) {\n      return a.price - b.price;\n    } else if (a.stock !== b.stock) {\n      return b.stock - a.stock;\n    }\n    return 0;\n  });\n\n  return (\n    <div>\n      {BackToOverview}\n      {image && (\n        <div className=\"product-image\">\n          <img src={image} alt={name} title={name} />\n        </div>\n      )}\n      <h2 className=\"product-name\">{name}</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Store</th>\n            <th>Stock</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedByPriceAndStock.map((item) => {\n            const store = data.stores[item.store];\n            return (\n              <tr key={store.id}>\n                <td>\n                  <a\n                    href={item.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    title={\n                      `In Stock: ` +\n                      (typeof item.stock === \"number\"\n                        ? item.stock\n                        : item.stock\n                        ? \"Yes\"\n                        : \"No\")\n                    }\n                  >\n                    {store.name}\n                  </a>\n                </td>\n                <td\n                  className={\n                    \"column-stock \" + (item.stock ? \"in-stock\" : \"out-of-stock\")\n                  }\n                >\n                  {item.stock\n                    ? typeof item.stock === \"number\"\n                      ? item.stock\n                      : \"Yes\"\n                    : 0}\n                </td>\n                <td>{item.price || \"???\"} kr</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <br />\n      {BackToOverview}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { RouterView, Route, RouteFallback } from \"peppermint-router\";\n\n// Pages\nimport { Overview } from \"./Overview\";\nimport { Product } from \"./Product\";\n\nexport const Routes = () => {\n  return (\n    <RouterView>\n      <Route path=\"#/\" component={Overview} />\n      <Route path=\"#/product/:id\" component={Product} />\n      <RouteFallback component={Overview} />\n    </RouterView>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\n// import data from \"./data.json\";\nimport { Routes } from \"./router\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1>\n        X-Wing Stock Checker\n        <span className=\"spark\" role=\"img\" aria-hidden>\n          ‚ö°\n        </span>\n      </h1>\n      <div className=\"update-notice\">\n        Updated every 15 minutes.\n        {/* <br />\n        Last update: {new Date(data.timestamp).toLocaleString(\"sv\")} */}\n        <br />\n        <em>Please support your local game store</em>\n      </div>\n      <Routes />\n      <footer>\n        <a\n          href=\"https://github.com/guidokessels/xwing-stock-checker/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Report a bug{\" \"}\n          <span role=\"img\" aria-hidden>\n            üêõ\n          </span>\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement && rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}